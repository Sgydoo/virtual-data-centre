
Virtual Data Centre
===================

These scripts allow you to launch a virtual network container for
QEMU/kvm virtual machines on a Linux host system. The container
consists of:

* A tap interface on the host machine.
* A Virtual Distributed Ethernet (VDE) switch connected to the tap interface.
* iptables rules on the host to configure NAT to the outside world.
* A DHCP server and DNS forwarder. We use dnsmasq for this.

Tested on Ubuntu 11.10 (Oneiric Ocelot) and Debian 7.0 (wheezy).


Prerequisites
-------------

You will need the following (Debian / Ubuntu) packages:

* Ubuntu 11.10 (Oneiric Ocelot)

iptables
qemu-common
qemu-kvm
kvm-pxe (optional, but stops a warning message every time you start a VM)
uml-utilities
vde2
dnsmasq

* Debian 7.0 (wheezy)

iptables
qemu
qemu-kvm
uml-utilities
vde2
dnsmasq

General Note: The uml-utilities package also installs a uml switch,
which starts up automatically at boot time. Since we won't be using
that, it's a good idea to disable it.


Configuring dnsmasq
-------------------

After installation, dnsmasq needs to be configured. For example, my
/etc/dnsmasq.d/local.conf looks like this:

 except-interface=eth0
 bind-interfaces
 dhcp-range=192.168.10.50,192.168.10.100,12h

To prevent contention with existing DHCP servers, the 'except-
interface' directive should be whichever interface is connected
to your LAN.

Remember to set the dhcp-range to suit your local situation. Just
ensure that you use a subnet which doesn't conflict with your LAN
address range.


Running the Scripts
-------------------

There are two main scripts:

 vdcnet   - Starts the network container (does nothing if the container
            is already running).

 launchvm - Starts a virtual machine and plugs it in to the VDE switch.
            Takes a qemu VM disk image and amount of RAM as arguments.

So to launch a VM in a new or existing network container:

 $ vdcnet start; launchvm <disk_image_filename> <RAM_in_MB>
